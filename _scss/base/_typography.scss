@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
     @each $fs-breakpoint, $fs-font-size in $fs-map{
        @if $fs-breakpoint == null {
             @include make-font-size($fs-font-size);
        }
        @else {
            // If $fs-font-size is a key that exists in
            // $fs-breakpoints, use the value
            @if map-has-key($fs-breakpoints, $fs-breakpoint) {
                $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
            }
            @media screen and (min-width: $fs-breakpoint) {
                 @include make-font-size($fs-font-size);
            }
        }
    }
}
// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
    // If $fs-font-size is a list, include
    // both font-size and line-height
    @if type-of($fs-font-size) == "list" {
        font-size: nth($fs-font-size, 1);
        @if (length($fs-font-size) > 1) {
            line-height: nth($fs-font-size, 2);
        }
    }
    @else {
        font-size: $fs-font-size;
    }
}

body {
    color: $base-font-color;
    font-family: $base-font-family;
    font-size: $base-font-size;
    line-height: 0;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: $heading-font-family;
    font-size: modular-scale(1);
    line-height: $heading-line-height;
    margin: 0 0 $small-spacing;
}

p {
    margin: 0 0 $p-spacing;
}

p,
span {
    @include font-size($p-font-sizes);
    font-family: "freight-text-pro", serif;
    font-weight: 400;
}

p span{
  font-size:1em;
}

p a {
  text-shadow: 3px 0 #fff, 2px 0 #fff, 1px 0 #fff, -1px 0 #fff, -2px 0 #fff, -3px 0 #fff;
  background-image: linear-gradient(currentColor,currentColor);
  background-size: 100% 1.5px;
  background-repeat: no-repeat;
  background-origin: padding-box;
  background-position: center bottom 15%;
  padding: .2em 0;
}

em {
  font-style: italic;
}

strong {
  font-weight: 700;
}

a {
    position: relative;
    color: $insight-red;
    text-decoration: none;
    transition: color $base-duration $base-timing;

    &:active,
    &:focus,
    &:hover {
        color: shade($insight-red, 25%);
    }

}

hr {
    border-bottom: $base-border;
    border-left: 0;
    border-right: 0;
    border-top: 0;
    margin: $base-spacing 0;
}

.text {
    max-width: $max-text-width;
}

.text-centered {
    max-width: $max-text-width;
    margin:0 auto;
}
.center{
    text-align: center;
}

h1 {
    @include font-size($h1-font-sizes);
    font-weight: bold;
}

h2 {
    @include font-size($h2-font-sizes);
    font-weight: 600;
    margin-bottom: 0.5em;
}

h3 {
    @include font-size($h3-font-sizes);
    font-style: italic;
    font-weight: 400;
}

h4 {
    @include font-size($h4-font-sizes);
    font-weight: bold;
}

h6 {
    @include font-size($h6-font-sizes);
    text-transform: uppercase;
    font-weight: bold;
    color: lighten($base-font-color, 30%);
    margin: 0;
}
/* standard */
pre {
    background-color: $code-color;
    padding: 1em;
    margin-bottom: 2rem;
    max-width:100%;
    white-space: pre;
    overflow: auto;

    code{
      padding:0;
    }
}

code {
    background-color: $code-color;
    padding: 0.2em .5em;
    font-family: $font-stack-inconsolata;
    font-size:.8em;

    span, p {
      font-family: $font-stack-inconsolata;
    }
}

pre code {
    border: none;
}
/* terminal */
pre.terminal {
    border: 1px solid #000;
    background-color: #333;
    color: #FFF;
}

pre.terminal code {
    background-color: #333;
}

.meta {
    color: #aaa;
}

.lineno {
  width:1em;
}
